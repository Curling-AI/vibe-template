---
description:
globs: src/stores/**/*.ts
alwaysApply: false
---
# Zustand State Management Rules

## Store Structure
- Use `create` with `combine` middleware for TypeScript support
- Separate interfaces: `State`, `Actions`, and combined `Store` type
- Place stores in `src/stores/` with descriptive names (e.g., `clickStore.ts`)

## State Organization
- Include data, loading states (`isLoading`), and error states (`error: string | null`)
- Use services from `src/services/` for API calls within store actions
- Return meaningful values from async actions for component usage

## Best Practices
- Keep stores focused (single responsibility)
- Split large stores into multiple files
- Use TypeScript interfaces for better type safety
- Export custom hooks for specific state slices when needed
