services:
  traefik:
    image: traefik:v3.0
    env_file:
      - ../../.env
    command:
      - '--api.dashboard=true'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080' # Dashboard do Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    networks:
      - vibe-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DOMAIN:-traefik.localhost}`)'
      - 'traefik.http.routers.dashboard.service=api@internal'

  frontend:
    build:
      context: ../..
      dockerfile: docker/Dockerfile.frontend.prod
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    env_file:
      - ../../.env
    environment:
      - NODE_ENV=production
    networks:
      - vibe-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=Host(`localhost`)'
      - 'traefik.http.routers.frontend.entrypoints=web'
      - 'traefik.http.services.frontend.loadbalancer.server.port=80'

    depends_on:
      - api

  api:
    build:
      context: ../..
      dockerfile: docker/Dockerfile.api.prod
    env_file:
      - ../../.env
    environment:
      - NODE_ENV=production
      - PORT=3001
    networks:
      - vibe-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`api.localhost`)'
      - 'traefik.http.routers.api.entrypoints=web'
      - 'traefik.http.services.api.loadbalancer.server.port=3001'

volumes:
  letsencrypt:

networks:
  vibe-network:
    driver: bridge
